<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>nlp on Scholarstree</title>
    <link>https://scholarstree.github.io/tags/nlp/</link>
    <description>Recent content in nlp on Scholarstree</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Apr 2018 12:00:00 +0530</lastBuildDate><atom:link href="https://scholarstree.github.io/tags/nlp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tharoor It</title>
      <link>https://scholarstree.github.io/posts/2018-04-27-tharoor-it/2018-04-27-tharoor-it/</link>
      <pubDate>Fri, 27 Apr 2018 12:00:00 +0530</pubDate>
      
      <guid>https://scholarstree.github.io/posts/2018-04-27-tharoor-it/2018-04-27-tharoor-it/</guid>
      <description>An application to calculate Tharoorian probability of some text.</description>
      <content:encoded><![CDATA[<figure class="align-center ">
    <img loading="lazy" src="/2018-04-27-tharoor-it/tharoor_it.png#center"
         alt="tsne_title"/> 
</figure>

<hr>
<p>I had recently started reading <a href="https://www.goodreads.com/book/show/32618967-an-era-of-darkness">An Era of Darkness: The British Empire in India</a> and was dazzled by <a href="http://www.shashitharoor.in/">Dr. Tharoor</a>&rsquo;s wizardry of words. He calls himself an amateur historian while painting an honest picture of British Raj in India. I was mesmerized by his writing and wondered if any underlying pattern could be found using Deep Learning. Hackfest, our annual college hackathon was also approaching around the time, so I decided to execute a project related to Dr. Tharoor&rsquo;s literature in 36 hours. So when the contest started, we were trying to build a Tharoorian text classifier.</p>
<p>We planned to make a lightweight web application capable of taking a piece of text as input and estimating the probability of it being written by Dr. Tharoor. We were aware that it would be impossible to make a deployable model in just 36 hours. Nevertheless, we worked out a plan - Gather and process data, train a model, deploy on a local server and keep improving the model.</p>
<h3 id="dataset">Dataset</h3>
<p>We collected 10 of Dr. Tharoor&rsquo;s published books, extracted ~30,000 sentences and labeled them as 1 while  manually removing short sentences consisting of only a few words. We randomly picked some books for negative samples and labeled ~200,000 sentences as 0. <a href="https://nlp.stanford.edu/projects/glove/">100d GloVe embeddings</a> were used for creating the embedding matrix - vector representation of words in the dataset.</p>
<table>
<thead>
<tr>
<th>Sentence</th>
<th style="text-align:center">Label</th>
</tr>
</thead>
<tbody>
<tr>
<td>The British Raj is scarcely ancient history.</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td>The reason was simple: India was governed for the benefit of Britain.</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td>By breaking the law non-violently he showed up the injustice of the law.</td>
<td style="text-align:center">1</td>
</tr>
<tr>
<td>This is not my fault.</td>
<td style="text-align:center">0</td>
</tr>
<tr>
<td>Grown-ups never understand anything by themselves, and it is exhausting for children to have to explain over and over again.</td>
<td style="text-align:center">0</td>
</tr>
</tbody>
</table>
<h3 id="model">Model</h3>
<p>We decided to use a Bidirectional <a href="http://colah.github.io/posts/2015-08-Understanding-LSTMs/">LSTM</a> for our purpose. Although we also tried 1D Convolutions which produced funny results. Training a bi-LSTM netowrk took 1 hour on our GPU. After our Keras model was trained, we exported it into a <code>.h5</code> file and used a flask server to <a href="https://blog.keras.io/building-a-simple-keras-deep-learning-rest-api.html">deploy it</a> to a local server.</p>
<h3 id="results">Results</h3>
<p>Although our model was a simple LSTM network without any attention, it gave decent predictions. Since the input to our network were single sentences only, it mostly depended upon presence of words to make predictions. Our training dataset only consisted of his books which kind of restricted our model&rsquo;s ability. Perhaps adding more data and using attention models would have given better results.</p>
<table>
<thead>
<tr>
<th>Sentence</th>
<th style="text-align:center">Prediction(%)</th>
</tr>
</thead>
<tbody>
<tr>
<td>Earth is flat.</td>
<td style="text-align:center">49.42</td>
</tr>
<tr>
<td>I will build a great, great wall on our southern border, and I will have Mexico pay for that wall. Mark my words.</td>
<td style="text-align:center">84.38</td>
</tr>
<tr>
<td>There was an idea to bring together a group of remarkable people, so when we needed them, they could fight the battles that we never could.</td>
<td style="text-align:center">96.64</td>
</tr>
<tr>
<td>Exasperating farrago of distortions, misrepresentations &amp; outright lies being broadcast by an unprincipled showman masquerading as a journalist.</td>
<td style="text-align:center">87.03</td>
</tr>
<tr>
<td>Albus Dumbledore didn&rsquo;t seem to realize that he had just arrived in a street where everything from his name to his boots was unwelcome.</td>
<td style="text-align:center">0.05</td>
</tr>
<tr>
<td>The sheep are running wild.</td>
<td style="text-align:center">2.83</td>
</tr>
<tr>
<td>History is boring.</td>
<td style="text-align:center">90.49</td>
</tr>
<tr>
<td>Physics is boring.</td>
<td style="text-align:center">37.65</td>
</tr>
<tr>
<td>I is extremely tired of reading history.</td>
<td style="text-align:center">22.47</td>
</tr>
</tbody>
</table>
<h3 id="conclusion">Conclusion</h3>
<p>Our team secured 6th rank out of ~50 participants. Along with this project, we also attempted Samsung&rsquo;s Bixby challenge based on NLP and were 2nd runner-up.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
